{"version":3,"sources":["LinkButton.tsx","index.tsx"],"names":["LinkButton","state","isFocused","isMouseDown","render","name","props","args","url","theme","btnstyle","outline","padding","borderRadius","borderStyling","primaryColor","border","backgroundColor","color","textColor","style","textDecoration","target","href","onClick","onClicked","onMouseDown","onMouseOver","_onFocus","onMouseOut","_onBlur","disabled","onFocus","onBlur","Streamlit","setComponentValue","setState","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"0PAYMA,E,4MACGC,MAAQ,CAAEC,WAAW,EAAQC,aAAa,G,EAE1CC,OAAS,WACd,IAAMC,EAAO,EAAKC,MAAMC,KAAX,KACPC,EAAM,EAAKF,MAAMC,KAAX,IACJE,EAAU,EAAKH,MAAfG,MAIJC,EAAgC,CAClCC,QAAO,OACPC,QAAO,gBACPC,aAAY,WAGd,GAAIJ,EAAO,CACT,IAAMK,EAAa,oBAAgB,EAAKb,MAAMC,UAAYO,EAAMM,aAA7B,yBACnCL,EAASM,OAASF,EAClBJ,EAASO,gBAAT,UAA8B,EAAKhB,MAAME,YAAcM,EAAMM,aAAeN,EAAMQ,iBAClFP,EAASQ,MAAT,UAAqB,EAAKjB,MAAME,YAAcM,EAAMQ,gBAAkB,EAAKhB,MAAMC,UAAYO,EAAMM,aAAeN,EAAMU,WAG1H,OAEE,uBAAGC,MAlBkC,CACpCC,eAAc,QAiBQC,OAAS,SAASC,KAAQf,GAC/C,4BACEY,MAAOV,EACPc,QAAS,EAAKC,UACdC,YAAa,EAAKA,YAClBC,YAAa,EAAKC,SAClBC,WAAY,EAAKC,QACjBC,SAAU,EAAKzB,MAAMyB,SACrBC,QAAS,EAAKJ,SACdK,OAAQ,EAAKH,SACZzB,K,EAODoB,UAAY,WAClBS,IAAUC,mBAAkB,I,EAGtBP,SAAW,WACjB,EAAKQ,SAAS,CAAElC,WAAW,K,EAGrB4B,QAAU,WAChB,EAAKM,SAAS,CAAElC,WAAW,IAC3B,EAAKkC,SAAS,CAAEjC,aAAa,K,EAGvBuB,YAAc,WACpB,EAAKU,SAAS,CAAEjC,aAAa,K,YAxDRkC,KA4DVC,cAAwBtC,GCpEvCuC,IAASnC,OACP,kBAAC,IAAMoC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6aef99b2.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\ninterface State {\r\n  isFocused: Boolean\r\n  isMouseDown: Boolean\r\n}\r\n\r\nclass LinkButton extends StreamlitComponentBase<State> {\r\n  public state = { isFocused: false , isMouseDown: false}\r\n\r\n  public render = (): ReactNode => {\r\n    const name = this.props.args[\"name\"]\r\n    const url = this.props.args[\"url\"]\r\n    const { theme } = this.props\r\n    const linkStyle: React.CSSProperties = {\r\n       textDecoration : `none`\r\n    }\r\n    let btnstyle: React.CSSProperties = {\r\n      outline : `none`,\r\n      padding : `.25rem .75rem`,\r\n      borderRadius : `0.25rem`,\r\n    }\r\n\r\n    if (theme) {\r\n      const borderStyling = `1px solid ${this.state.isFocused ? theme.primaryColor : `rgba(38, 39, 48, 0.2)`}`\r\n      btnstyle.border = borderStyling\r\n      btnstyle.backgroundColor = `${this.state.isMouseDown ? theme.primaryColor : theme.backgroundColor}`\r\n      btnstyle.color = `${ this.state.isMouseDown ? theme.backgroundColor : this.state.isFocused ? theme.primaryColor : theme.textColor}`\r\n    }\r\n\r\n    return (\r\n      // eslint-disable-next-line \r\n      <a style = {linkStyle} target = '_blank' href = {url}>\r\n        <button\r\n          style={btnstyle}\r\n          onClick={this.onClicked}\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseOver={this._onFocus}\r\n          onMouseOut={this._onBlur}\r\n          disabled={this.props.disabled}\r\n          onFocus={this._onFocus}\r\n          onBlur={this._onBlur}>\r\n          {name}\r\n        </button>\r\n        </a>\r\n    )\r\n\r\n  }\r\n\r\n  private onClicked = (): void => {\r\n    Streamlit.setComponentValue(true)\r\n  }\r\n\r\n  private _onFocus = (): void => {\r\n    this.setState({ isFocused: true })\r\n  }\r\n\r\n  private _onBlur = (): void => {\r\n    this.setState({ isFocused: false })\r\n    this.setState({ isMouseDown: false})\r\n  }\r\n\r\n  private onMouseDown = () : void => {\r\n    this.setState({ isMouseDown: true})\r\n  } \r\n}\r\n\r\nexport default withStreamlitConnection(LinkButton)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport LinkButton from \"./LinkButton\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <LinkButton />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}